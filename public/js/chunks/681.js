"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[681],{99681:(e,s,n)=>{n.r(s),n.d(s,{default:()=>d});n(67294);var a=n(34475),l=n(71618),r=n(25868),i=n(85893);const d=function(){return(0,i.jsxs)(a.rb,{children:[(0,i.jsx)(a.b7,{xs:12,children:(0,i.jsx)(l.Z,{name:"Range",href:"forms/range"})}),(0,i.jsx)(a.b7,{xs:12,children:(0,i.jsxs)(a.xH,{className:"mb-4",children:[(0,i.jsxs)(a.bn,{children:[(0,i.jsx)("strong",{children:"React Range"})," ",(0,i.jsx)("small",{})]}),(0,i.jsxs)(a.sl,{children:[(0,i.jsxs)("p",{className:"text-medium-emphasis small",children:["Create custom ",(0,i.jsx)("code",{children:'<input type="range">'})," controls with"," ",(0,i.jsx)("code",{children:"<CFormRange>"}),"."]}),(0,i.jsxs)(r.Z,{href:"forms/range",children:[(0,i.jsx)(a.L8,{htmlFor:"customRange1",children:"Example range"}),(0,i.jsx)(a.ZB,{id:"customRange1"})]})]})]})}),(0,i.jsx)(a.b7,{xs:12,children:(0,i.jsxs)(a.xH,{className:"mb-4",children:[(0,i.jsxs)(a.bn,{children:[(0,i.jsx)("strong",{children:"React Range"})," ",(0,i.jsx)("small",{children:"Disabled"})]}),(0,i.jsxs)(a.sl,{children:[(0,i.jsxs)("p",{className:"text-medium-emphasis small",children:["Add the ",(0,i.jsx)("code",{children:"disabled"})," boolean attribute on an input to give it a grayed out appearance and remove pointer events."]}),(0,i.jsxs)(r.Z,{href:"forms/range#disabled",children:[(0,i.jsx)(a.L8,{htmlFor:"disabledRange",children:"Disabled range"}),(0,i.jsx)(a.ZB,{id:"disabledRange",disabled:!0})]})]})]})}),(0,i.jsx)(a.b7,{xs:12,children:(0,i.jsxs)(a.xH,{className:"mb-4",children:[(0,i.jsxs)(a.bn,{children:[(0,i.jsx)("strong",{children:"React Range"})," ",(0,i.jsx)("small",{children:"Min and max"})]}),(0,i.jsxs)(a.sl,{children:[(0,i.jsxs)("p",{className:"text-medium-emphasis small",children:["Range inputs have implicit values for ",(0,i.jsx)("code",{children:"min"})," and ",(0,i.jsx)("code",{children:"max"}),"â€”",(0,i.jsx)("code",{children:"0"})," and ",(0,i.jsx)("code",{children:"100"}),", respectively. You may specify new values for those using the ",(0,i.jsx)("code",{children:"min"})," and ",(0,i.jsx)("code",{children:"max"})," attributes."]}),(0,i.jsxs)(r.Z,{href:"forms/range#min-and-max",children:[(0,i.jsx)(a.L8,{htmlFor:"customRange2",children:"Example range"}),(0,i.jsx)(a.ZB,{min:"0",max:"5",defaultValue:"3",id:"customRange2"})]})]})]})}),(0,i.jsx)(a.b7,{xs:12,children:(0,i.jsxs)(a.xH,{className:"mb-4",children:[(0,i.jsxs)(a.bn,{children:[(0,i.jsx)("strong",{children:"React Range"})," ",(0,i.jsx)("small",{children:"Steps"})]}),(0,i.jsxs)(a.sl,{children:[(0,i.jsxs)("p",{className:"text-medium-emphasis small",children:['By default, range inputs "snap" to integer values. To change this, you can specify a ',(0,i.jsx)("code",{children:"step"})," value. In the example below, we double the number of steps by using ",(0,i.jsx)("code",{children:'step="0.5"'}),"."]}),(0,i.jsxs)(r.Z,{href:"forms/range#steps",children:[(0,i.jsx)(a.L8,{htmlFor:"customRange3",children:"Example range"}),(0,i.jsx)(a.ZB,{min:"0",max:"5",step:"0.5",defaultValue:"3",id:"customRange3"})]})]})]})})]})}}}]);